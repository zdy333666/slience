spring.application.name=rest2
server.port=8002

# \u8be5\u53c2\u6570\u7528\u6765\u5f00\u542f\u91cd\u8bd5\u673a\u5236
spring.cloud.loadbalancer.retry.enabled=true

eureka.client.enabled=true
eureka.client.healthcheck.enabled=true
eureka.client.fetchRegistry=true
#eureka.client.fetch-remote-regions-registry=aliyun
eureka.client.registry-fetch-interval-seconds=5
eureka.client.registerWithEureka=true
eureka.client.service-url.defaultZone=http://192.168.10.226:8761/eureka/
eureka.client.preferSameZoneEureka=true

eureka.instance.preferIpAddress=true
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=10


feign.compression.request.enabled=true
feign.compression.response.enabled=true
feign.compression.request.mime-types=text/xml,application/xml,application/json
feign.compression.request.min-request-size=2048

feign.hystrix.enabled=true
#feign.httpclient.enabled=false
#feign.okhttp.enabled=false


# \u9694\u79bb\u7b56\u7565 1 THREAD: \u5728\u5355\u72ec\u7684\u7ebf\u7a0b\u4e0a\u6267\u884c\uff0c\u5e76\u53d1\u8bf7\u6c42\u53d7\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u6570\u9650\u5236 2 SEMAPHORE: \u5728\u8c03\u7528\u7ebf\u7a0b\u4e0a\u6267\u884c\uff0c\u5e76\u53d1\u8bf7\u6c42\u91cf\u53d7\u4fe1\u53f7\u91cf\u8ba1\u6570\u9650\u5236
hystrix.command.default.execution.isolation.strategy=THREAD
# \u6267\u884c\u662f\u5426\u542f\u7528\u8d85\u65f6\uff0c\u9ed8\u8ba4\u542f\u7528true
hystrix.command.default.execution.timeout.enabled=true
# \u547d\u4ee4\u6267\u884c\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba41000ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=100
# \u53d1\u751f\u8d85\u65f6\u662f\u662f\u5426\u4e2d\u65ad\uff0c\u9ed8\u8ba4true
hystrix.command.default.execution.isolation.thread.interruptOnTimeout=true
# \u6700\u5927\u5e76\u53d1\u8bf7\u6c42\u6570\uff0c\u9ed8\u8ba410\uff0c\u8be5\u53c2\u6570\u5f53\u4f7f\u7528ExecutionIsolationStrategy.SEMAPHORE\u7b56\u7565\u65f6\u624d\u6709\u6548\u3002\u5982\u679c\u8fbe\u5230\u6700\u5927\u5e76\u53d1\u8bf7\u6c42\u6570\uff0c\u8bf7\u6c42\u4f1a\u88ab\u62d2\u7edd\u3002
# \u7406\u8bba\u4e0a\u9009\u62e9semaphore size\u7684\u539f\u5219\u548c\u9009\u62e9thread size\u4e00\u81f4\uff0c\u4f46\u9009\u7528semaphore\u65f6\u6bcf\u6b21\u6267\u884c\u7684\u5355\u5143\u8981\u6bd4\u8f83\u5c0f\u4e14\u6267\u884c\u901f\u5ea6\u5feb\uff08ms\u7ea7\u522b\uff09\uff0c\u5426\u5219\u7684\u8bdd\u5e94\u8be5\u7528thread\u3002semaphore\u5e94\u8be5\u5360\u6574\u4e2a\u5bb9\u5668\uff08tomcat\uff09\u7684\u7ebf\u7a0b\u6c60\u7684\u4e00\u5c0f\u90e8\u5206\u3002
#hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=5

# \u5f53\u6267\u884c\u5931\u8d25\u6216\u8005\u8bf7\u6c42\u88ab\u62d2\u7edd\uff0c\u662f\u5426\u4f1a\u5c1d\u8bd5\u8c03\u7528hystrixCommand.getFallback() \u3002\u9ed8\u8ba4true
hystrix.command.default.fallback.enabled=true

# \u7528\u6765\u8ddf\u8e2acircuit\u7684\u5065\u5eb7\u6027\uff0c\u5982\u679c\u672a\u8fbe\u6807\u5219\u8ba9request\u77ed\u8def\u3002\u9ed8\u8ba4true
hystrix.command.default.circuitBreaker.enabled=true
# \u4e00\u4e2arolling window\u5185\u6700\u5c0f\u7684\u8bf7\u6c42\u6570\u3002\u5982\u679c\u8bbe\u4e3a20\uff0c\u90a3\u4e48\u5f53\u4e00\u4e2arolling window\u7684\u65f6\u95f4\u5185\uff08\u6bd4\u5982\u8bf41\u4e2arolling window\u662f10\u79d2\uff09\u6536\u523019\u4e2a\u8bf7\u6c42\uff0c\u5373\u4f7f19\u4e2a\u8bf7\u6c42\u90fd\u5931\u8d25\uff0c\u4e5f\u4e0d\u4f1a\u89e6\u53d1circuit break\u3002\u9ed8\u8ba420
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
# \u89e6\u53d1\u77ed\u8def\u7684\u65f6\u95f4\u503c\uff0c\u5f53\u8be5\u503c\u8bbe\u4e3a5000\u65f6\uff0c\u5219\u5f53\u89e6\u53d1circuit break\u540e\u76845000\u6beb\u79d2\u5185\u90fd\u4f1a\u62d2\u7eddrequest\uff0c\u4e5f\u5c31\u662f5000\u6beb\u79d2\u540e\u624d\u4f1a\u5173\u95edcircuit\u3002\u9ed8\u8ba45000
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000
#\u9519\u8bef\u6bd4\u7387\u9600\u503c\uff0c\u5982\u679c\u9519\u8bef\u7387>=\u8be5\u503c\uff0ccircuit\u4f1a\u88ab\u6253\u5f00\uff0c\u5e76\u77ed\u8def\u6240\u6709\u8bf7\u6c42\u89e6\u53d1fallback\u3002\u9ed8\u8ba450
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50
# \u5f3a\u5236\u6253\u5f00\u7194\u65ad\u5668\uff0c\u5982\u679c\u6253\u5f00\u8fd9\u4e2a\u5f00\u5173\uff0c\u90a3\u4e48\u62d2\u7edd\u6240\u6709request\uff0c\u9ed8\u8ba4false
hystrix.command.default.circuitBreaker.forceOpen=false
# \u5f3a\u5236\u5173\u95ed\u7194\u65ad\u5668 \u5982\u679c\u8fd9\u4e2a\u5f00\u5173\u6253\u5f00\uff0ccircuit\u5c06\u4e00\u76f4\u5173\u95ed\u4e14\u5ffd\u7565
hystrix.command.default.circuitBreaker.forceClosed=false

# \u6267\u884c\u65f6\u662f\u5426enable\u6307\u6807\u7684\u8ba1\u7b97\u548c\u8ddf\u8e2a\uff0c\u9ed8\u8ba4true
hystrix.command.default.metrics.rollingPercentile.enabled=true
# \u8bbe\u7f6e\u7edf\u8ba1\u7684\u65f6\u95f4\u7a97\u53e3\u503c\u7684\uff0c\u6beb\u79d2\u503c\uff0ccircuit break \u7684\u6253\u5f00\u4f1a\u6839\u636e1\u4e2arolling window\u7684\u7edf\u8ba1\u6765\u8ba1\u7b97\u3002\u82e5rolling window\u88ab\u8bbe\u4e3a10000\u6beb\u79d2\uff0c\u5219rolling window\u4f1a\u88ab\u5206\u6210n\u4e2abuckets\uff0c\u6bcf\u4e2abucket\u5305\u542bsuccess\uff0cfailure\uff0ctimeout\uff0crejection\u7684\u6b21\u6570\u7684\u7edf\u8ba1\u4fe1\u606f\u3002\u9ed8\u8ba410000
hystrix.command.default.metrics.rollingStats.timeInMilliseconds=10000
# \u8bbe\u7f6e\u4e00\u4e2arolling window\u88ab\u5212\u5206\u7684\u6570\u91cf\uff0c\u82e5numBuckets\uff1d10\uff0crolling window\uff1d10000\uff0c\u90a3\u4e48\u4e00\u4e2abucket\u7684\u65f6\u95f4\u53731\u79d2\u3002\u5fc5\u987b\u7b26\u5408rolling window % numberBuckets == 0\u3002\u9ed8\u8ba410
hystrix.command.default.metrics.rollingStats.numBuckets=10
# \u8bbe\u7f6erolling percentile window\u7684\u65f6\u95f4\uff0c\u9ed8\u8ba460000
hystrix.command.default.metrics.rollingPercentile.timeInMilliseconds=60000
# \u8bbe\u7f6erolling percentile window\u7684numberBuckets\u3002\u903b\u8f91\u540c\u4e0a\u3002\u9ed8\u8ba46
hystrix.command.default.metrics.rollingPercentile.numBuckets=6
# \u5982\u679cbucket size\uff1d100\uff0cwindow\uff1d10s\uff0c\u82e5\u8fd910s\u91cc\u6709500\u6b21\u6267\u884c\uff0c\u53ea\u6709\u6700\u540e100\u6b21\u6267\u884c\u4f1a\u88ab\u7edf\u8ba1\u5230bucket\u91cc\u53bb\u3002\u589e\u52a0\u8be5\u503c\u4f1a\u589e\u52a0\u5185\u5b58\u5f00\u9500\u4ee5\u53ca\u6392\u5e8f\u7684\u5f00\u9500\u3002\u9ed8\u8ba4100
hystrix.command.default.metrics.rollingPercentile.bucketSize=100
# \u8bb0\u5f55health \u5feb\u7167\uff08\u7528\u6765\u7edf\u8ba1\u6210\u529f\u548c\u9519\u8bef\u7eff\uff09\u7684\u95f4\u9694\uff0c\u9ed8\u8ba4500ms
hystrix.command.default.metrics.healthSnapshot.intervalInMilliseconds=500

# \u9ed8\u8ba4true\uff0c\u9700\u8981\u91cd\u8f7dgetCacheKey()\uff0c\u8fd4\u56denull\u65f6\u4e0d\u7f13\u5b58
hystrix.command.default.requestCache.enabled=false
#  \u8bb0\u5f55\u65e5\u5fd7\u5230HystrixRequestLog\uff0c\u9ed8\u8ba4true
hystrix.command.default.requestLog.enabled=false

# \u5e76\u53d1\u6267\u884c\u7684\u6700\u5927\u7ebf\u7a0b\u6570\uff0c\u9ed8\u8ba410
#\u7ebf\u7a0b\u6570\u9ed8\u8ba4\u503c10\u9002\u7528\u4e8e\u5927\u90e8\u5206\u60c5\u51b5\uff08\u6709\u65f6\u53ef\u4ee5\u8bbe\u7f6e\u5f97\u66f4\u5c0f\uff09\uff0c\u5982\u679c\u9700\u8981\u8bbe\u7f6e\u5f97\u66f4\u5927\uff0c\u90a3\u6709\u4e2a\u57fa\u672c\u5f97\u516c\u5f0f\u53ef\u4ee5follow\uff1a
#requests per second at peak when healthy \u00d7 99th percentile latency in seconds + some breathing room
#\u6bcf\u79d2\u6700\u5927\u652f\u6491\u7684\u8bf7\u6c42\u6570 (99%\u5e73\u5747\u54cd\u5e94\u65f6\u95f4 + \u7f13\u5b58\u503c)
#\u6bd4\u5982\uff1a\u6bcf\u79d2\u80fd\u5904\u74061000\u4e2a\u8bf7\u6c42\uff0c99%\u7684\u8bf7\u6c42\u54cd\u5e94\u65f6\u95f4\u662f60ms\uff0c\u90a3\u4e48\u516c\u5f0f\u662f\uff1a
#1000 \uff080.060+0.012\uff09
#\u57fa\u672c\u5f97\u539f\u5219\u65f6\u4fdd\u6301\u7ebf\u7a0b\u6c60\u5c3d\u53ef\u80fd\u5c0f\uff0c\u4ed6\u4e3b\u8981\u662f\u4e3a\u4e86\u91ca\u653e\u538b\u529b\uff0c\u9632\u6b62\u8d44\u6e90\u88ab\u963b\u585e\u3002
#\u5f53\u4e00\u5207\u90fd\u662f\u6b63\u5e38\u7684\u65f6\u5019\uff0c\u7ebf\u7a0b\u6c60\u4e00\u822c\u4ec5\u4f1a\u67091\u52302\u4e2a\u7ebf\u7a0b\u6fc0\u6d3b\u6765\u63d0\u4f9b\u670d\u52a1
hystrix.threadpool.default.coreSize=5
# BlockingQueue\u7684\u6700\u5927\u961f\u5217\u6570\uff0c\u5f53\u8bbe\u4e3a\uff0d1\uff0c\u4f1a\u4f7f\u7528SynchronousQueue\uff0c\u503c\u4e3a\u6b63\u65f6\u4f7f\u7528LinkedBlcokingQueue\u3002\u8be5\u8bbe\u7f6e\u53ea\u4f1a\u5728\u521d\u59cb\u5316\u65f6\u6709\u6548\uff0c\u4e4b\u540e\u4e0d\u80fd\u4fee\u6539threadpool\u7684queue size\uff0c\u9664\u975ereinitialising thread executor\u3002\u9ed8\u8ba4\uff0d1\u3002
hystrix.threadpool.default.maxQueueSize=-1
# \u5373\u4f7fmaxQueueSize\u6ca1\u6709\u8fbe\u5230\uff0c\u8fbe\u5230queueSizeRejectionThreshold\u8be5\u503c\u540e\uff0c\u8bf7\u6c42\u4e5f\u4f1a\u88ab\u62d2\u7edd\u3002\u56e0\u4e3amaxQueueSize\u4e0d\u80fd\u88ab\u52a8\u6001\u4fee\u6539\uff0c\u8fd9\u4e2a\u53c2\u6570\u5c06\u5141\u8bb8\u6211\u4eec\u52a8\u6001\u8bbe\u7f6e\u8be5\u503c\u3002if maxQueueSize == -1\uff0c\u8be5\u5b57\u6bb5\u5c06\u4e0d\u8d77\u4f5c\u7528
hystrix.threadpool.default.queueSizeRejectionThreshold=
#  \u7ebf\u7a0b\u6c60\u7edf\u8ba1\u6307\u6807\u7684\u65f6\u95f4\uff0c\u9ed8\u8ba410000
hystrix.threadpool.default.metrics.rollingStats.timeInMilliseconds=10000
# \u5c06rolling window\u5212\u5206\u4e3an\u4e2abuckets\uff0c\u9ed8\u8ba410
hystrix.threadpool.default.metrics.rollingStats.numBuckets=10


ribbon.eureka.enabled=true
# Ribbon\u914d\u7f6e\u9965\u997f\u52a0\u8f7d
ribbon.eager-load.enabled=true
#\u8bf7\u6c42\u8fde\u63a5\u7684\u8d85\u65f6\u65f6\u95f4
ribbon.ConnectTimeout=500
# \u8bf7\u6c42\u5904\u7406\u7684\u8d85\u65f6\u65f6\u95f4
ribbon.ReadTimeout=1000
# \u5bf9\u6240\u6709\u64cd\u4f5c\u8bf7\u6c42\u90fd\u8fdb\u884c\u91cd\u8bd5
ribbon.OkToRetryOnAllOperations=false
# \u5207\u6362\u5b9e\u4f8b\u7684\u91cd\u8bd5\u6b21\u6570\u3002 \u4eceDalston\u5f00\u59cb\uff0cRibbon\u652f\u6301\u914d\u7f6eeager load\u5b9e\u73b0\u5728\u542f\u52a8\u65f6\u5c31\u521d\u59cb\u5316Ribbon\u76f8\u5173\u7c7b
ribbon.MaxAutoRetriesNextServer=0
# \u5bf9\u5f53\u524d\u5b9e\u4f8b\u7684\u91cd\u8bd5\u6b21\u6570
ribbon.MaxAutoRetries=1


#(default: 0.1, which is 10 percent)
spring.sleuth.sampler.probability=1.0
spring.sleuth.web.client.enabled=true
spring.sleuth.feign.enabled=true

spring.zipkin.sender.type=web
spring.zipkin.baseUrl: http://127.0.0.1:9411/

management.endpoints.enabled-by-default=true
management.endpoints.web.exposure.include=*
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=*

spring.security.user.name=user
spring.security.user.password=123456

#logging.level.org.springframework.cloud=TRACE
logging.level.cn.slience=INFO